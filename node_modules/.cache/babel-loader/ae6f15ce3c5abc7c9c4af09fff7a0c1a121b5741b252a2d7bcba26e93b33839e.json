{"ast":null,"code":"var _jsxFileName = \"/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/components/NewVocabForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:8000/api/v1';\nconst NewVocabForm = () => {\n  _s();\n  const [vocabChinese, setChinese] = useState('');\n  const [vocabEnglish, setEnglish] = useState('');\n  const [category, setCategory] = useState('');\n  const [languageMode, setLanguageMode] = useState('');\n  const handleChineseChange = e => {\n    console.log(e.target.value);\n    setChinese(e.target.value);\n  };\n  const handleEnglishChange = e => {\n    setEnglish(e.target.value);\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  };\n  const handleLanguageModeChange = e => {\n    setLanguageMode(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(baseUrl + '/vocab/', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vocab_chinese: vocabChinese,\n        vocab_english: vocabEnglish,\n        category: category,\n        english_to_chinese: languageMode\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(resJson => {\n      setChinese('');\n      setEnglish('');\n      setCategory('');\n      setLanguageMode('');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"vocabChinese\",\n      onChange: handleChineseChange,\n      value: vocabChinese,\n      placeholder: \"Chinese Vocab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"vocabEnglish\",\n      onChange: handleEnglishChange,\n      value: vocabEnglish,\n      placeholder: \"English Vocab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"category\",\n      onChange: handleCategoryChange,\n      value: category,\n      placeholder: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"languageMode\",\n      onChange: handleal,\n      value: set,\n      placeholder: \"Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add New Vocab Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(NewVocabForm, \"oKHEm2J+C1Q+mN27TZdVGqUm/kw=\");\n_c = NewVocabForm;\nexport default NewVocabForm;\nvar _c;\n$RefreshReg$(_c, \"NewVocabForm\");","map":{"version":3,"names":["React","useState","Navigate","baseUrl","NewVocabForm","vocabChinese","setChinese","vocabEnglish","setEnglish","category","setCategory","languageMode","setLanguageMode","handleChineseChange","e","console","log","target","value","handleEnglishChange","handleCategoryChange","handleLanguageModeChange","handleSubmit","preventDefault","fetch","credentials","method","headers","body","JSON","stringify","vocab_chinese","vocab_english","english_to_chinese","then","res","status","json","resJson","handleal","set"],"sources":["/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/components/NewVocabForm.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Navigate } from 'react-router-dom';\n\n\nlet baseUrl = 'http://localhost:8000/api/v1'\n\nconst NewVocabForm = () =>{\n    const [vocabChinese, setChinese] = useState('')\n    const [vocabEnglish, setEnglish] = useState('')\n    const [category, setCategory] = useState('')\n    const [languageMode, setLanguageMode] = useState('')\n   \n\n    const handleChineseChange = (e) =>{\n        console.log(e.target.value)\n        setChinese(e.target.value)\n    }\n    const handleEnglishChange = (e) =>{\n        setEnglish(e.target.value)\n    }\n    const handleCategoryChange = (e) =>{\n        setCategory(e.target.value)\n    }\n    const handleLanguageModeChange = (e) =>{\n        setLanguageMode(e.target.value)\n    }\n    \n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        fetch(baseUrl + '/vocab/', {\n                credentials: 'include',\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                  vocab_chinese: vocabChinese,\n                  vocab_english: vocabEnglish,\n                  category: category,\n                  english_to_chinese: languageMode\n                })\n              })\n              .then(res => {\n                if(res.status === 200) {\n                  return res.json()\n                } else {\n                  return []\n                }\n              })\n              .then(resJson =>{\n                setChinese('')\n                setEnglish('')\n                setCategory('')\n                setLanguageMode('')                              \n              })\n                     \n    }\n\n    return(\n       \n        <form onSubmit={handleSubmit}>\n            <input type = 'text' id='vocabChinese' onChange={handleChineseChange} value={vocabChinese} placeholder='Chinese Vocab'></input>\n            <input type = 'text' id='vocabEnglish' onChange={handleEnglishChange} value={vocabEnglish} placeholder='English Vocab'></input>\n            <input type = 'text' id='category' onChange={handleCategoryChange} value={category} placeholder='Category'></input>\n            <input type = 'checkbox' id='languageMode' onChange={handleal} value={set} placeholder='Set'></input>\n            <button type = 'submit' >Add New Vocab Card</button>    \n        </form>\n    )\n\n}\n\nexport default NewVocabForm\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAG5C,IAAIC,OAAO,GAAG,8BAA8B;AAE5C,MAAMC,YAAY,GAAG,MAAK;EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACM,YAAY,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGpD,MAAMY,mBAAmB,GAAIC,CAAC,IAAI;IAC9BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3BZ,UAAU,CAACQ,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMC,mBAAmB,GAAIL,CAAC,IAAI;IAC9BN,UAAU,CAACM,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAME,oBAAoB,GAAIN,CAAC,IAAI;IAC/BJ,WAAW,CAACI,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMG,wBAAwB,GAAIP,CAAC,IAAI;IACnCF,eAAe,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMI,YAAY,GAAIR,CAAC,IAAI;IACvBA,CAAC,CAACS,cAAc,EAAE;IAClBC,KAAK,CAACrB,OAAO,GAAG,SAAS,EAAE;MACnBsB,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,aAAa,EAAE1B,YAAY;QAC3B2B,aAAa,EAAEzB,YAAY;QAC3BE,QAAQ,EAAEA,QAAQ;QAClBwB,kBAAkB,EAAEtB;MACtB,CAAC;IACH,CAAC,CAAC,CACDuB,IAAI,CAACC,GAAG,IAAI;MACX,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACrB,OAAOD,GAAG,CAACE,IAAI,EAAE;MACnB,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF,CAAC,CAAC,CACDH,IAAI,CAACI,OAAO,IAAG;MACdhC,UAAU,CAAC,EAAE,CAAC;MACdE,UAAU,CAAC,EAAE,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;MACfE,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC;EAEZ,CAAC;EAED,oBAEI;IAAM,QAAQ,EAAEU,YAAa;IAAA,wBACzB;MAAO,IAAI,EAAG,MAAM;MAAC,EAAE,EAAC,cAAc;MAAC,QAAQ,EAAET,mBAAoB;MAAC,KAAK,EAAER,YAAa;MAAC,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/H;MAAO,IAAI,EAAG,MAAM;MAAC,EAAE,EAAC,cAAc;MAAC,QAAQ,EAAEc,mBAAoB;MAAC,KAAK,EAAEZ,YAAa;MAAC,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/H;MAAO,IAAI,EAAG,MAAM;MAAC,EAAE,EAAC,UAAU;MAAC,QAAQ,EAAEa,oBAAqB;MAAC,KAAK,EAAEX,QAAS;MAAC,WAAW,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eACnH;MAAO,IAAI,EAAG,UAAU;MAAC,EAAE,EAAC,cAAc;MAAC,QAAQ,EAAE8B,QAAS;MAAC,KAAK,EAAEC,GAAI;MAAC,WAAW,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACrG;MAAQ,IAAI,EAAG,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAGf,CAAC;AAAA,GA7DKpC,YAAY;AAAA,KAAZA,YAAY;AA+DlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}