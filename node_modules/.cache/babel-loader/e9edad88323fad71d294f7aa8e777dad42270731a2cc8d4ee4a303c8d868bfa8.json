{"ast":null,"code":"var _jsxFileName = \"/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/components/AnimalsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimalsPage = props => {\n  _s();\n  // console.log(props)\n  // console.log(typeof(props.vocabs[0].english_to_chinese))\n  // console.log(props.vocabs[0].english_to_chinese)\n  const [englishToggle, setEnglishToggle] = useState('True');\n  const [animalVocabs, setAnimalVocabs] = useState([]);\n  // console.log(props.vocabs)\n  // console.log(props.vocabs.length)\n\n  useEffect(() => {\n    async function fetchdata() {\n      // await props.getVocabs()\n      await console.log(props.vocabs);\n      await console.log(props.vocabs.length);\n      // await handleAnimalVocabs()      \n      // await console.log('user effect')\n    }\n\n    fetchdata();\n  }, []);\n  const handleAnimalVocabs = () => {\n    console.log('i am in animal kindom');\n    let animalArray = [];\n    for (let i = 0; i < props.vocabs.length; i++) {\n      console.log(props.vocabs[i].category);\n      if (props.vocabs[i].category === 'animal') {\n        console.log('here');\n        animalArray.push(props.vocabs[i]);\n      }\n    }\n    setAnimalVocabs(animalArray);\n    //  return animalVocabs\n  };\n\n  console.log(props.voca);\n  console.log(animalVocabs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"VOCAB CARDS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), animalVocabs.map(vocab => {\n      const handleLanguageChange = () => {\n        setEnglishToggle('False');\n        vocab.english_to_chinese = englishToggle;\n      };\n      // console.log (vocab.english_to_chinese)\n\n      if (vocab.english_to_chinese === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"REMEMBER?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: vocab.vocab_english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLanguageChange,\n            children: \"Click Me to See the Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, vocab.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: vocab.vocab_chinese\n        }, vocab.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      }\n    })]\n  }, void 0, true);\n};\n_s(AnimalsPage, \"P3FG3AGNkdX1GZR7pFyFIj0l0xs=\");\n_c = AnimalsPage;\nexport default AnimalsPage;\nvar _c;\n$RefreshReg$(_c, \"AnimalsPage\");","map":{"version":3,"names":["useEffect","useState","AnimalsPage","props","englishToggle","setEnglishToggle","animalVocabs","setAnimalVocabs","fetchdata","console","log","vocabs","length","handleAnimalVocabs","animalArray","i","category","push","voca","map","vocab","handleLanguageChange","english_to_chinese","vocab_english","id","vocab_chinese"],"sources":["/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/components/AnimalsPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nconst AnimalsPage = (props) =>{\n    // console.log(props)\n    // console.log(typeof(props.vocabs[0].english_to_chinese))\n    // console.log(props.vocabs[0].english_to_chinese)\n    const [englishToggle, setEnglishToggle] = useState ('True')\n    const [animalVocabs, setAnimalVocabs] = useState([])\n    // console.log(props.vocabs)\n    // console.log(props.vocabs.length)\n\n    \n    useEffect(()=>{\n      async function fetchdata() {\n      // await props.getVocabs()\n      await console.log(props.vocabs)\n      await console.log(props.vocabs.length)\n      // await handleAnimalVocabs()      \n      // await console.log('user effect')\n      }\n      fetchdata()\n    },[])\n        \n    \n    const handleAnimalVocabs = () =>{\n      console.log('i am in animal kindom')\n      let animalArray = []\n      for (let i = 0; i <props.vocabs.length; i++) { \n        console.log(props.vocabs[i].category)\n        if(props.vocabs[i].category === 'animal'){\n          console.log('here')\n         animalArray.push(props.vocabs[i])        \n        }\n      }\n      setAnimalVocabs(animalArray)      \n    //  return animalVocabs\n    }\n\n    console.log(props.voca)\n    console.log(animalVocabs)\n  \n \n    return(\n      <>\n      <h1>VOCAB CARDS</h1>\n      {animalVocabs.map((vocab) => {        \n        const handleLanguageChange = () =>{\n         setEnglishToggle('False')\n         vocab.english_to_chinese = englishToggle\n        }\n        // console.log (vocab.english_to_chinese)\n      \n       if(vocab.english_to_chinese === true){\n        return (\n          <div key={vocab.id}>\n            <div>REMEMBER?</div>                               \n            <div>          \n            {vocab.vocab_english}\n            </div>\n            <button onClick={handleLanguageChange}>Click Me to See the Answer</button>                                             \n          </div>\n        )\n       } else {\n        return(\n          <div key={vocab.id}>          \n            {vocab.vocab_chinese}\n            </div>\n        )\n       }\n        \n        } )}\n      </>\n    )\n      \n}\n\n\n\n        \n    \n          \n\nexport default AnimalsPage;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,MAAMC,WAAW,GAAIC,KAAK,IAAI;EAAA;EAC1B;EACA;EACA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAE,MAAM,CAAC;EAC3D,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD;EACA;;EAGAD,SAAS,CAAC,MAAI;IACZ,eAAeQ,SAAS,GAAG;MAC3B;MACA,MAAMC,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,MAAM,CAAC;MAC/B,MAAMF,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,MAAM,CAACC,MAAM,CAAC;MACtC;MACA;IACA;;IACAJ,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMK,kBAAkB,GAAG,MAAK;IAC9BJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAII,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAEZ,KAAK,CAACQ,MAAM,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;MAC3CN,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,MAAM,CAACI,CAAC,CAAC,CAACC,QAAQ,CAAC;MACrC,IAAGb,KAAK,CAACQ,MAAM,CAACI,CAAC,CAAC,CAACC,QAAQ,KAAK,QAAQ,EAAC;QACvCP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACpBI,WAAW,CAACG,IAAI,CAACd,KAAK,CAACQ,MAAM,CAACI,CAAC,CAAC,CAAC;MAClC;IACF;IACAR,eAAe,CAACO,WAAW,CAAC;IAC9B;EACA,CAAC;;EAEDL,OAAO,CAACC,GAAG,CAACP,KAAK,CAACe,IAAI,CAAC;EACvBT,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EAGzB,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,EACnBA,YAAY,CAACa,GAAG,CAAEC,KAAK,IAAK;MAC3B,MAAMC,oBAAoB,GAAG,MAAK;QACjChB,gBAAgB,CAAC,OAAO,CAAC;QACzBe,KAAK,CAACE,kBAAkB,GAAGlB,aAAa;MACzC,CAAC;MACD;;MAED,IAAGgB,KAAK,CAACE,kBAAkB,KAAK,IAAI,EAAC;QACpC,oBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoB,eACpB;YAAA,UACCF,KAAK,CAACG;UAAa;YAAA;YAAA;YAAA;UAAA,QACd,eACN;YAAQ,OAAO,EAAEF,oBAAqB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoC;QAAA,GALlED,KAAK,CAACI,EAAE;UAAA;UAAA;UAAA;QAAA,QAMZ;MAET,CAAC,MAAM;QACN,oBACE;UAAA,UACGJ,KAAK,CAACK;QAAa,GADZL,KAAK,CAACI,EAAE;UAAA;UAAA;UAAA;QAAA,QAEV;MAEX;IAEC,CAAC,CAAE;EAAA,gBACF;AAGT,CAAC;AAAA,GAxEKtB,WAAW;AAAA,KAAXA,WAAW;AAgFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}