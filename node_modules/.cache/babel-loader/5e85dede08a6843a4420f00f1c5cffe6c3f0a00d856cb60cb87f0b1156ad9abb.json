{"ast":null,"code":"var _jsxFileName = \"/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/components/NewVocabForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:8000/api/v1';\nconst NewVocabForm = () => {\n  _s();\n  const [vocabChinese, setChinese] = useState('');\n  const [vocabEnglish, setEnglish] = useState('');\n  const [category, setCategory] = useState('');\n  const [english_to_chinese, setEnglishToChinese] = useState('True');\n  const handleChineseChange = e => {\n    console.log(e.target.value);\n    setChinese(e.target.value);\n  };\n  const handleEnglishChange = e => {\n    setEnglish(e.target.value);\n  };\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(baseUrl + '/vocab/', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vocab_chinese: vocabChinese,\n        vocab_english: vocabEnglish,\n        category: category,\n        english_to_chinese: english_to_chinese\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(resJson => {\n      setChinese('');\n      setEnglish('');\n      setCategory('');\n      getvocab;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"vocabChinese\",\n      onChange: handleChineseChange,\n      value: vocabChinese,\n      placeholder: \"Chinese Vocab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"vocabEnglish\",\n      onChange: handleEnglishChange,\n      value: vocabEnglish,\n      placeholder: \"English Vocab\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"category\",\n      onChange: handleCategoryChange,\n      value: category,\n      placeholder: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add New Vocab Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(NewVocabForm, \"ufIh/tWOlQcmo+PTi91PO66PmLg=\");\n_c = NewVocabForm;\nexport default NewVocabForm;\nvar _c;\n$RefreshReg$(_c, \"NewVocabForm\");","map":{"version":3,"names":["React","useState","Navigate","baseUrl","NewVocabForm","vocabChinese","setChinese","vocabEnglish","setEnglish","category","setCategory","english_to_chinese","setEnglishToChinese","handleChineseChange","e","console","log","target","value","handleEnglishChange","handleCategoryChange","handleSubmit","preventDefault","fetch","credentials","method","headers","body","JSON","stringify","vocab_chinese","vocab_english","then","res","status","json","resJson","getvocab"],"sources":["/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/components/NewVocabForm.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Navigate } from 'react-router-dom';\n\n\nlet baseUrl = 'http://localhost:8000/api/v1'\n\nconst NewVocabForm = () =>{\n    const [vocabChinese, setChinese] = useState('')\n    const [vocabEnglish, setEnglish] = useState('')\n    const [category, setCategory] = useState('')\n    const [english_to_chinese, setEnglishToChinese] = useState('True')\n   \n\n    const handleChineseChange = (e) =>{\n        console.log(e.target.value)\n        setChinese(e.target.value)\n    }\n    const handleEnglishChange = (e) =>{\n        setEnglish(e.target.value)\n    }\n    const handleCategoryChange = (e) =>{\n        setCategory(e.target.value)\n    }\n  \n    \n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        fetch(baseUrl + '/vocab/', {\n                credentials: 'include',\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                  vocab_chinese: vocabChinese,\n                  vocab_english: vocabEnglish,\n                  category: category,\n                  english_to_chinese: english_to_chinese\n                })\n              })\n              .then(res => {\n                if(res.status === 200) {\n                  return res.json()\n                } else {\n                  return []\n                }\n              })\n              .then(resJson =>{\n                setChinese('')\n                setEnglish('')\n                setCategory('')\n                getvocab\n                                           \n              })\n                     \n    }\n\n    return(\n       \n        <form onSubmit={handleSubmit}>\n            <input type = 'text' id='vocabChinese' onChange={handleChineseChange} value={vocabChinese} placeholder='Chinese Vocab'></input>\n            <input type = 'text' id='vocabEnglish' onChange={handleEnglishChange} value={vocabEnglish} placeholder='English Vocab'></input>\n            <input type = 'text' id='category' onChange={handleCategoryChange} value={category} placeholder='Category'></input>            \n            <button type = 'submit' >Add New Vocab Card</button>    \n        </form>\n    )\n\n}\n\nexport default NewVocabForm\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAG5C,IAAIC,OAAO,GAAG,8BAA8B;AAE5C,MAAMC,YAAY,GAAG,MAAK;EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACM,YAAY,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,kBAAkB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAGlE,MAAMY,mBAAmB,GAAIC,CAAC,IAAI;IAC9BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3BZ,UAAU,CAACQ,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMC,mBAAmB,GAAIL,CAAC,IAAI;IAC9BN,UAAU,CAACM,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAME,oBAAoB,GAAIN,CAAC,IAAI;IAC/BJ,WAAW,CAACI,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAGD,MAAMG,YAAY,GAAIP,CAAC,IAAI;IACvBA,CAAC,CAACQ,cAAc,EAAE;IAClBC,KAAK,CAACpB,OAAO,GAAG,SAAS,EAAE;MACnBqB,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,aAAa,EAAEzB,YAAY;QAC3B0B,aAAa,EAAExB,YAAY;QAC3BE,QAAQ,EAAEA,QAAQ;QAClBE,kBAAkB,EAAEA;MACtB,CAAC;IACH,CAAC,CAAC,CACDqB,IAAI,CAACC,GAAG,IAAI;MACX,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACrB,OAAOD,GAAG,CAACE,IAAI,EAAE;MACnB,CAAC,MAAM;QACL,OAAO,EAAE;MACX;IACF,CAAC,CAAC,CACDH,IAAI,CAACI,OAAO,IAAG;MACd9B,UAAU,CAAC,EAAE,CAAC;MACdE,UAAU,CAAC,EAAE,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;MACf2B,QAAQ;IAEV,CAAC,CAAC;EAEZ,CAAC;EAED,oBAEI;IAAM,QAAQ,EAAEhB,YAAa;IAAA,wBACzB;MAAO,IAAI,EAAG,MAAM;MAAC,EAAE,EAAC,cAAc;MAAC,QAAQ,EAAER,mBAAoB;MAAC,KAAK,EAAER,YAAa;MAAC,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/H;MAAO,IAAI,EAAG,MAAM;MAAC,EAAE,EAAC,cAAc;MAAC,QAAQ,EAAEc,mBAAoB;MAAC,KAAK,EAAEZ,YAAa;MAAC,WAAW,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAS,eAC/H;MAAO,IAAI,EAAG,MAAM;MAAC,EAAE,EAAC,UAAU;MAAC,QAAQ,EAAEa,oBAAqB;MAAC,KAAK,EAAEX,QAAS;MAAC,WAAW,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eACnH;MAAQ,IAAI,EAAG,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAGf,CAAC;AAAA,GA3DKL,YAAY;AAAA,KAAZA,YAAY;AA6DlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}