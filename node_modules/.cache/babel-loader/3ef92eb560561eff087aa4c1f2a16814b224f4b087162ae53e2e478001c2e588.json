{"ast":null,"code":"var _jsxFileName = \"/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport VocabContainer from './components/VocabContainer';\nimport LoginUser from './components/LoginUser';\nimport RegisterUser from './components/RegisterUser';\nimport NewVocabForm from './components/NewVocabForm';\nimport HomePage from './components/HomePage';\nimport NavBar from './components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:8000/api/v1';\nfunction App() {\n  _s();\n  const [vocabs, setVocabs] = useState([]);\n  const navigate = useNavigate();\n  const getVocabs = () => {\n    fetch(baseUrl + '/vocab', {\n      credentials: \"include\"\n    }).then(res => {\n      console.log('');\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      console.log(data.data);\n      setVocabs(data.data);\n    });\n  };\n  const loginUser = async e => {\n    console.log('loginuser');\n    console.log(e.target.email.value);\n    e.preventDefault();\n    const url = baseUrl + '/user/login';\n    const loginBody = {\n      password: e.target.password.value,\n      email: e.target.email.value\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      console.log(response);\n      console.log('BODY:', response.body);\n      if (response.status === 200) {\n        getVocabs();\n        navigate('vocabs');\n      }\n    } catch (err) {\n      console.log('Error:', err);\n    }\n  };\n  const register = async e => {\n    console.log('loginuser');\n    console.log(e.target.email.value);\n    e.preventDefault();\n    const url = baseUrl + '/user/register';\n    const registerBody = {\n      first_name: e.target.firstName.value,\n      last_name: e.target.lastName.value,\n      password: e.target.password.value,\n      email: e.target.email.value\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(registerBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n      console.log('BODY:', response.body);\n      if (response.status === 201) {\n        console.log('register successfully');\n        getVocabs();\n        navigate('login');\n      }\n    } catch (err) {\n      console.log('Error:', err);\n    }\n  };\n  useEffect(() => {\n    getVocabs();\n  }, []);\n  const newVocab = vocab => {\n    console.log('hit new vocab');\n    fetch(baseUrl + '/vocab', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vocab_chinese: vocab.vocabChinese,\n        vocab_english: vocab.vocabEnglish,\n        category: vocab.category,\n        set: vocab.set\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      getVocabs();\n    });\n  };\n  const deleteVocab = async id => {\n    console.log('hit delete vocab');\n    fetch(baseUrl + `/vocab/${id}`, {\n      credentials: 'include',\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      getVocabs();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/vocabs\",\n        element: /*#__PURE__*/_jsxDEV(VocabContainer, {\n          vocabs: vocabs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginUser, {\n          loginUser: loginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterUser, {\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new\",\n        element: /*#__PURE__*/_jsxDEV(NewVocabForm, {\n          newVocab: newVocab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"o1whVLTDUrGGEe40SRd3BHz18C0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","Routes","Route","useNavigate","Navigate","VocabContainer","LoginUser","RegisterUser","NewVocabForm","HomePage","NavBar","baseUrl","App","vocabs","setVocabs","navigate","getVocabs","fetch","credentials","then","res","console","log","status","json","data","loginUser","e","target","email","value","preventDefault","url","loginBody","password","response","method","body","JSON","stringify","headers","err","register","registerBody","first_name","firstName","last_name","lastName","newVocab","vocab","vocab_chinese","vocabChinese","vocab_english","vocabEnglish","category","set","deleteVocab","id"],"sources":["/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {Routes, Route, useNavigate, Navigate} from 'react-router-dom';\nimport VocabContainer from './components/VocabContainer';\nimport LoginUser from './components/LoginUser';\nimport RegisterUser from './components/RegisterUser';\nimport NewVocabForm from './components/NewVocabForm';\nimport HomePage from './components/HomePage';\nimport NavBar from './components/NavBar';\n\nlet baseUrl = 'http://localhost:8000/api/v1'\n\n\nfunction App() {\n  const [vocabs, setVocabs]= useState([])\n  const navigate = useNavigate()\n  \n  const getVocabs = () =>{\n    fetch(baseUrl + '/vocab', {\n      credentials: \"include\"\n    })\n    .then(res => {\n      console.log('')\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data.data)\n      setVocabs(data.data)\n    })\n  }\n\n  const loginUser = async(e) => {\n    console.log('loginuser')\n    console.log(e.target.email.value)\n    e.preventDefault()\n    const url = baseUrl + '/user/login'\n    const loginBody = {\n      password: e.target.password.value,\n      email: e.target.email.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      console.log(response)\n      console.log('BODY:', response.body)\n      if(response.status === 200) {\n        getVocabs()\n        navigate('vocabs')\n      }\n    }\n    catch (err) {\n      console.log('Error:', err)\n    }\n  }\n\n  const register = async(e) => {\n    console.log('loginuser')\n    console.log(e.target.email.value)\n    e.preventDefault()\n    const url = baseUrl + '/user/register'\n    const registerBody = {\n      first_name: e.target.firstName.value,\n      last_name: e.target.lastName.value,\n      password: e.target.password.value,\n      email: e.target.email.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(registerBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(response)\n      console.log('BODY:', response.body)\n      if(response.status === 201) {\n        console.log('register successfully')\n        getVocabs()\n        navigate('login')\n      }\n    }\n    catch (err) {\n      console.log('Error:', err)\n    }\n  }\n\n\n\n  useEffect(()=>{\n    getVocabs()\n  }, [])\n\n  const newVocab = (vocab) =>{\n    console.log('hit new vocab')\n    fetch(baseUrl + '/vocab', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        vocab_chinese: vocab.vocabChinese,\n        vocab_english: vocab.vocabEnglish,\n        category: vocab.category,\n        set: vocab.set\n      })\n    })\n    .then(res => {\n      if(res.status === 200) {\n        return res.json()\n      } else {\n        return []\n      }\n    })\n    .then(data =>{\n      getVocabs()\n    })\n  }\n\n  const deleteVocab = async(id) =>{\n    console.log('hit delete vocab')\n    fetch(baseUrl + `/vocab/${id}`, {\n      credentials: 'include',\n      method: 'DELETE',\n      headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => {\n      if(res.status === 200) {\n        return res.json()\n      } else {\n        return []\n      }\n    })\n    .then (data =>{\n      getVocabs()\n    })\n  }\n\n  return (\n  <>\n    <NavBar />\n    <Routes>\n      <Route path='/vocabs' element={<VocabContainer vocabs={vocabs} />} />\n      <Route path='/login' element={<LoginUser loginUser={loginUser} />} />\n      <Route path='/register' element={<RegisterUser register={register} />} />\n      <Route path='/new' element={<NewVocabForm newVocab={newVocab} />} />\n      <Route path='/' element={<HomePage />} />\n\n    </Routes>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}