{"ast":null,"code":"var _jsxFileName = \"/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport VocabContainer from './components/VocabContainer';\nimport LoginUser from './components/LoginUser';\nimport RegisterUser from './components/RegisterUser';\nimport NewVocabForm from './components/NewVocabForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:8000/api/v1';\nfunction App() {\n  _s();\n  const [vocabs, setVocabs] = useState([]);\n  const navigate = useNavigate();\n  const getVocabs = () => {\n    fetch(baseUrl + '/vocab', {\n      credentials: \"include\"\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      console.log(data.data);\n      setVocabs(data.data);\n    });\n  };\n  const loginUser = async e => {\n    console.log('loginuser');\n    console.log(e.target.email.value);\n    e.preventDefault();\n    const url = baseUrl + '/user/login';\n    const loginBody = {\n      password: e.target.password.value,\n      email: e.target.email.value\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      console.log(response);\n      console.log('BODY:', response.body);\n      if (response.status === 200) {\n        getVocabs();\n        navigate('vocabs');\n      }\n    } catch (err) {\n      console.log('Error:', err);\n    }\n  };\n  const register = async e => {\n    console.log('loginuser');\n    console.log(e.target.email.value);\n    e.preventDefault();\n    const url = baseUrl + '/user/register';\n    const registerBody = {\n      first_name: e.target.firstName.value,\n      last_name: e.target.lastName.value,\n      password: e.target.password.value,\n      email: e.target.email.value\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(registerBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n      console.log('BODY:', response.body);\n      if (response.status === 201) {\n        console.log('register successfully');\n        getVocabs();\n        navigate('login');\n      }\n    } catch (err) {\n      console.log('Error:', err);\n    }\n  };\n  useEffect(() => {\n    getVocabs();\n  }, []);\n  const newVocab = vocab => {\n    console.log('vocab.target.category.value');\n    fetch(baseUrl + '/vocab', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vocab_chinese: vocab.vocab_chinese,\n        vocab_english: vocab.vocab_english,\n        category: vocab.category,\n        set: vocab.set\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      getVocabs();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/vocabs\",\n      element: /*#__PURE__*/_jsxDEV(VocabContainer, {\n        vocabs: vocabs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginUser, {\n        loginUser: loginUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      element: /*#__PURE__*/_jsxDEV(RegisterUser, {\n        register: register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/new\",\n      element: /*#__PURE__*/_jsxDEV(NewVocabForm, {\n        newVocab: newVocab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o1whVLTDUrGGEe40SRd3BHz18C0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","Routes","Route","useNavigate","Navigate","VocabContainer","LoginUser","RegisterUser","NewVocabForm","baseUrl","App","vocabs","setVocabs","navigate","getVocabs","fetch","credentials","then","res","status","json","data","console","log","loginUser","e","target","email","value","preventDefault","url","loginBody","password","response","method","body","JSON","stringify","headers","err","register","registerBody","first_name","firstName","last_name","lastName","newVocab","vocab","vocab_chinese","vocab_english","category","set"],"sources":["/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {Routes, Route, useNavigate, Navigate} from 'react-router-dom';\nimport VocabContainer from './components/VocabContainer';\nimport LoginUser from './components/LoginUser';\nimport RegisterUser from './components/RegisterUser';\nimport NewVocabForm from './components/NewVocabForm';\n\nlet baseUrl = 'http://localhost:8000/api/v1'\n\n\nfunction App() {\n  const [vocabs, setVocabs]= useState([])\n  const navigate = useNavigate()\n  \n  const getVocabs = () =>{\n    fetch(baseUrl + '/vocab', {\n      credentials: \"include\"\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data.data)\n      setVocabs(data.data)\n    })\n  }\n\n  const loginUser = async(e) => {\n    console.log('loginuser')\n    console.log(e.target.email.value)\n    e.preventDefault()\n    const url = baseUrl + '/user/login'\n    const loginBody = {\n      password: e.target.password.value,\n      email: e.target.email.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      console.log(response)\n      console.log('BODY:', response.body)\n      if(response.status === 200) {\n        getVocabs()\n        navigate('vocabs')\n      }\n    }\n    catch (err) {\n      console.log('Error:', err)\n    }\n  }\n\n  const register = async(e) => {\n    console.log('loginuser')\n    console.log(e.target.email.value)\n    e.preventDefault()\n    const url = baseUrl + '/user/register'\n    const registerBody = {\n      first_name: e.target.firstName.value,\n      last_name: e.target.lastName.value,\n      password: e.target.password.value,\n      email: e.target.email.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(registerBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(response)\n      console.log('BODY:', response.body)\n      if(response.status === 201) {\n        console.log('register successfully')\n        getVocabs()\n        navigate('login')\n      }\n    }\n    catch (err) {\n      console.log('Error:', err)\n    }\n  }\n\n\n\n  useEffect(()=>{\n    getVocabs()\n  }, [])\n\n  const newVocab = (vocab) =>{\n    console.log('vocab.target.category.value')\n    fetch(baseUrl + '/vocab', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        vocab_chinese: vocab.vocab_chinese,\n        vocab_english: vocab.vocab_english,\n        category: vocab.category,\n        set: vocab.set\n      })\n    })\n    .then(res => {\n      if(res.status === 200) {\n        return res.json()\n      } else {\n        return []\n      }\n    })\n    .then(data =>{\n      getVocabs()\n    })\n  }\n\n  return (\n    <Routes>\n      <Route path='/vocabs' element={<VocabContainer vocabs={vocabs} />} />\n      <Route path='/login' element={<LoginUser loginUser={loginUser} />} />\n      <Route path='/register' element={<RegisterUser register={register} />} />\n      <Route path='/new' element={<NewVocabForm newVocab={newVocab} />} />\n    </Routes>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}