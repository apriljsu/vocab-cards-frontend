{"ast":null,"code":"var _jsxFileName = \"/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport VocabContainer from './components/VocabContainer';\nimport LoginUser from './components/LoginUser';\nimport RegisterUser from './components/RegisterUser';\nimport NewVocabForm from './components/NewVocabForm';\nimport HomePage from './components/HomePage';\nimport NavBar from './components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = 'http://localhost:8000/api/v1';\nfunction App() {\n  _s();\n  const [vocabs, setVocabs] = useState([]);\n  const [vocabChinese, setChinese] = useState('');\n  const [vocabEnglish, setEnglish] = useState('');\n  const [category, setCategory] = useState('');\n  const [set, setSet] = useState('');\n  const navigate = useNavigate();\n  const getVocabs = e => {\n    fetch(baseUrl + '/vocab/', {\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('hit vocab');\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      console.log(data.data);\n      setVocabs(data.data);\n    });\n  };\n  const loginUser = async e => {\n    console.log('loginuser');\n    console.log(e.target.email.value);\n    e.preventDefault();\n    const url = baseUrl + '/user/login';\n    const loginBody = {\n      password: e.target.password.value,\n      email: e.target.email.value\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      console.log(response);\n      console.log('BODY:', response.body);\n      if (response.status === 200) {\n        getVocabs();\n        navigate('vocabs');\n      }\n    } catch (err) {\n      console.log('Error:', err);\n    }\n  };\n  const register = async e => {\n    console.log('loginuser');\n    console.log(e.target.email.value);\n    e.preventDefault();\n    const url = baseUrl + '/user/register';\n    const registerBody = {\n      first_name: e.target.firstName.value,\n      last_name: e.target.lastName.value,\n      password: e.target.password.value,\n      email: e.target.email.value\n    };\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(registerBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n      console.log('BODY:', response.body);\n      if (response.status === 201) {\n        console.log('register successfully');\n        getVocabs();\n        navigate('login');\n      }\n    } catch (err) {\n      console.log('Error:', err);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(baseUrl + '/vocab/', {\n      credentials: 'include',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vocab_chinese: vocabChinese,\n        vocab_english: vocabEnglish,\n        category: category,\n        set: set\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(resJson => {\n      setChinese('');\n      setEnglish('');\n      setCategory('');\n      setSet('');\n    });\n  };\n  const deleteVocab = async id => {\n    console.log('hit delete vocab');\n    fetch(baseUrl + `/vocab/${id}`, {\n      credentials: 'include',\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return [];\n      }\n    }).then(data => {\n      getVocabs();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/vocabs\",\n        element: /*#__PURE__*/_jsxDEV(VocabContainer, {\n          vocabs: vocabs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginUser, {\n          loginUser: loginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterUser, {\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new\",\n        element: /*#__PURE__*/_jsxDEV(NewVocabForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+KPBx4m838/s9tzEHZ6ASkNWbhE=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","Routes","Route","useNavigate","Navigate","VocabContainer","LoginUser","RegisterUser","NewVocabForm","HomePage","NavBar","baseUrl","App","vocabs","setVocabs","vocabChinese","setChinese","vocabEnglish","setEnglish","category","setCategory","set","setSet","navigate","getVocabs","e","fetch","credentials","headers","then","res","console","log","status","json","data","loginUser","target","email","value","preventDefault","url","loginBody","password","response","method","body","JSON","stringify","err","register","registerBody","first_name","firstName","last_name","lastName","handleSubmit","vocab_chinese","vocab_english","resJson","deleteVocab","id"],"sources":["/Users/jiajiasu/Desktop/GA/vocab-cards/vocab-cards-frontend/vocab-cards-frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {Routes, Route, useNavigate, Navigate} from 'react-router-dom';\nimport VocabContainer from './components/VocabContainer';\nimport LoginUser from './components/LoginUser';\nimport RegisterUser from './components/RegisterUser';\nimport NewVocabForm from './components/NewVocabForm';\nimport HomePage from './components/HomePage';\nimport NavBar from './components/NavBar';\n\nlet baseUrl = 'http://localhost:8000/api/v1'\n\n\nfunction App() {\n  const [vocabs, setVocabs]= useState([])\n  const [vocabChinese, setChinese] = useState('')\n  const [vocabEnglish, setEnglish] = useState('')\n  const [category, setCategory] = useState('')\n  const [set, setSet] = useState('')\n  const navigate = useNavigate()\n  \n  const getVocabs = (e) =>{\n    fetch(baseUrl + '/vocab/', {\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      console.log('hit vocab')\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data.data)\n      setVocabs(data.data)\n    })\n  }\n\n  const loginUser = async(e) => {\n    console.log('loginuser')\n    console.log(e.target.email.value)\n    e.preventDefault()\n    const url = baseUrl + '/user/login'\n    const loginBody = {\n      password: e.target.password.value,\n      email: e.target.email.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      console.log(response)\n      console.log('BODY:', response.body)\n      if(response.status === 200) {\n        getVocabs()\n        navigate('vocabs')\n      }\n    }\n    catch (err) {\n      console.log('Error:', err)\n    }\n  }\n\n  const register = async(e) => {\n    console.log('loginuser')\n    console.log(e.target.email.value)\n    e.preventDefault()\n    const url = baseUrl + '/user/register'\n    const registerBody = {\n      first_name: e.target.firstName.value,\n      last_name: e.target.lastName.value,\n      password: e.target.password.value,\n      email: e.target.email.value\n    }\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(registerBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(response)\n      console.log('BODY:', response.body)\n      if(response.status === 201) {\n        console.log('register successfully')\n        getVocabs()\n        navigate('login')\n      }\n    }\n    catch (err) {\n      console.log('Error:', err)\n    }\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    fetch(baseUrl + '/vocab/', {\n            credentials: 'include',\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              vocab_chinese: vocabChinese,\n              vocab_english: vocabEnglish,\n              category: category,\n              set: set\n            })\n          })\n          .then(res => {\n            if(res.status === 200) {\n              return res.json()\n            } else {\n              return []\n            }\n          })\n          .then(resJson =>{\n            setChinese('')\n            setEnglish('')\n            setCategory('')\n            setSet('')\n            \n          })\n                 \n}\n\n\n  const deleteVocab = async(id) =>{\n    console.log('hit delete vocab')\n    fetch(baseUrl + `/vocab/${id}`, {\n      credentials: 'include',\n      method: 'DELETE',\n      headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => {\n      if(res.status === 200) {\n        return res.json()\n      } else {\n        return []\n      }\n    })\n    .then (data =>{\n      getVocabs()\n    })\n  }\n\n  return (\n  <>\n    <NavBar />\n    <Routes>\n      <Route path='/vocabs' element={<VocabContainer vocabs={vocabs} />} />\n      <Route path='/login' element={<LoginUser loginUser={loginUser} />} />\n      <Route path='/register' element={<RegisterUser register={register} />} />\n      <Route path='/new' element={<NewVocabForm />} />\n      <Route path='/' element={<HomePage />} />\n\n    </Routes>\n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}